let words,wordlist,words_all,scoreboard,answers,answer,guesses,guesses_all,gameMode,wordCount,gameStatus,characters=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],modes={1:{Name:"Snare Trap",Instructions:'<b>Narrowing Down the Wordlist:</b> Begin by making a series of guesses from the available 5-letter word list. Each guess should help filter down the word list.<br>\n                                    <b>Letter Grouping Restriction:</b> No subsequent guesses can contain two or more letters that appear together in a previous guess.<br>\n                                    <ul><li><i>Example:</i> If your first guess is "Water", a later guess like "Wrist" is not allowed since the letters "W", "R", and "T" are grouped together in "Water."</li></ul>\n                                    <b>Word Selection:</b> Once the word list has been narrowed down to 100 words or fewer, the final word will be chosen.<br>\n                                    <b>Guess Feedback:</b> After the word is chosen:<br>\n                                    <ul>\n                                        <li>Green letters indicate the correct letter in the correct position.</li>\n                                        <li>Yellow letters indicate the correct letter in the wrong position.</li>\n                                    </ul>'},2:{Name:"Elusive Goose",Instructions:"<b>Guess:</b> Start by guessing a 5-letter word.<br>\n                                    After each guess:<br>\n                                    <ul>\n                                        <li><b>Green letters</b> indicate the correct letter in the correct position.</li>\n                                        <li><b>Yellow letters</b> indicate the correct letter in the wrong position.</li>\n                                    </ul>\n                                    <b>Mystery Word Changes:</b><br>\n                                    <ul>\n                                        <li>Every three guesses, the mystery word will change.</li>\n                                        <li>The new word will always include any green letters that have been guessed correctly so far.</li>\n                                    </ul>"}};async function initialize(){switch($(".board").remove(),$(".keyboard-key").removeClass("incorrect-key").removeClass("present-key").removeClass("correct-key"),answers=[],guesses=[],guesses_all=[],gameStatus=0,await retrieveWordLists(),words=1===gameMode?words_all:wordlist,wordCount=words.length,gameMode){case 1:$(".bar").css("width","100%"),$(".bar-marker").css("left",100/wordCount*100+"%").css("opacity",1),$(".progress-msg").text(`${wordCount} / ${wordCount} words`);break;case 2:answer=getWord(),answers.push(answer),$(".bar").css("width","0"),$(".bar-marker").css("opacity",0),$(".progress-msg").text("")}initializeNewBoard()}async function setGameMode(e){gameMode=e,await initialize(),words=1===gameMode?words_all:wordlist,wordCount=words.length,$("#mode-btn").text(modes[gameMode].Name).css("opacity",1),$("#instructions-dialog h3").html(modes[gameMode].Name),$("#instructions-dialog p").html(modes[gameMode].Instructions)}function endGame(){answers.length>0&&guesses_all.length>0&&($(".answer-group").each((function(e){let t=answers[e].word.split("");$(this).find(".tile").each((function(e){$(this).data("letter",t[e]).text(t[e])}))})),$(".answer-group").css("display","grid"))}async function retrieveWordLists(){wordlist=await readWordlist("./wordlist.txt"),words_all=await readWordlist("./wordlist-all.txt")}async function readWordlist(e){return fetch(e).then((e=>e.text())).then((e=>e.split("\r\n").map((e=>({word:e,stringMap:getStringMap(e),score:0}))))).catch((e=>{console.error("Error reading file:",e)}))}function initializeNewBoard(){$(".board-container").append('<div class="board"></div>'),populateBoard($(".board").last());let e=document.querySelectorAll(".board");e[e.length-1].scrollIntoView({behavior:"smooth"})}function populateBoard(e){let t=2===gameMode?3:6;for(let s=0;s<t;s++){let t=$('<div class="group"></div>');for(let e=0;e<5;e++)t.append(`<div class="tile empty-tile ${0===s?"active-tile":""}" data-index="${e+1}"></div>`);e.append(t)}if(1===gameMode&&0===guesses_all.length){let e=characters[Math.floor(25*Math.random())];$(".active-tile").first().data("letter",e).text(e).removeClass("empty-tile").addClass("filled-tile").addClass("starter-tile")}else{let t=$('<div class="group answer-group"></div>');for(let e=0;e<5;e++)t.append(`<div class="tile" data-index="${e+1}"></div>`);e.append(t)}}function readScoreboard(){return new Promise((e=>{$.ajax({type:"GET",url:"https://prod-56.westus.logic.azure.com:443/workflows/7534300353cb48ad892f6741046aeab8/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=JS-U_mvyGe_-PXwesvCPE7DA0oASww0h6h7D1RXM47Q",success:function(t){scoreboard=JSON.parse(t),populateScoreboard(),e()}})}))}function populateScoreboard(){$("#st-scoreboard table tbody").empty();for(let e in scoreboard.ST_Top10){let t=scoreboard.ST_Top10[e],s=t.Player,a=t.Words;$("#st-scoreboard table tbody").append(`<tr><td>${s.Name}</td><td style="text-align:center;">${a}</td></tr>`)}$("#eg-scoreboard table tbody").empty();for(let e in scoreboard.EG_Top10){let t=scoreboard.EG_Top10[e],s=t.Player,a=t.Word,o=t.Guesses;$("#eg-scoreboard table tbody").append(`<tr><td>${s.Name}</td><td>${a}</td><td style="text-align:center;">${o}</td></tr>`)}}function updateScoreboard(){let e=new XMLHttpRequest;e.open("POST","https://prod-175.westus.logic.azure.com:443/workflows/da7be3f7e0374a6aa1c200d4ae6730f7/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=dmIrVanj-WdaSVYRRrJnyqBIXafgN1aBxQUrMCU2Lag",!0),e.setRequestHeader("Content-Type","application/json"),e.onreadystatechange=function(){if(4===this.readyState&&(e.onreadystatechange=null,202===this.status)){JSON.parse(this.response);showToast("Scoreboard updated!")}},e.send(JSON.stringify(scoreboard))}function submitGuess(e){let t=[];e.each((function(){t.push($(this).data("letter"))}));let s=t.join("");guesses.includes(s)?(showToast("Word was already guessed!"),e.each((function(){$(this).addClass("editable-tile")}))):1!==gameMode&&void 0===words_all.find((e=>e.word===s))?(showToast("Word is not in the wordlist!"),e.each((function(){$(this).addClass("editable-tile")}))):1===gameMode&&void 0===words.find((e=>e.word===s))?(showToast("Word is not in the wordlist!"),e.each((function(){$(this).hasClass("starter-tile")||$(this).addClass("editable-tile")}))):(e.each((function(){$(this).removeClass("editable-tile").addClass("submitted-tile")})),processGuess(e,s),$(".active-tile").removeClass("active-tile"),$(".empty-tile").slice(0,5).each((function(){$(this).addClass("active-tile")})))}function processGuess(e,t){switch(guesses.push(t),guesses_all.push(t),gameMode){case 1:processGuessST(t);break;case 1.5:case 2:processGuessEG(e,t)}}function processGuessST(e){words=words.map((t=>({...t,score:getCommonCount(t,e)}))).filter((e=>e.score<2)),$(".progress-msg").text(`${words.length} / ${wordCount} words`),words.length<=100?(answer=getWord(),answers.push(answer),showToast("A word has been chosen!"),gameMode=1.5,$(".bar-marker").css("opacity",0),$(".progress-msg").text("")):$(".bar").css("width",words.length/wordCount*100+"%"),0===$(".empty-tile").length&&initializeNewBoard()}function processGuessEG(e,t){let s=answer.word.split("").map((e=>({letter:e,marked:!1}))),a=t.split("").map(((e,t)=>({index:t,letter:e,marked:!1})));for(let t=0;t<s.length;t++){let o=a.find(((e,a)=>e.letter===s[t].letter&&!e.marked&&a===t));if(void 0!==o){let a=$(`.keyboard-key[data-key="${o.letter}"]`);e.eq(o.index).addClass("correct-tile"),a.removeClass("present-key").addClass("correct-key"),o.marked=!0,s[t].marked=!0}}let o=s.filter((e=>!e.marked));for(let t=0;t<o.length;t++){let s=a.find((e=>e.letter===o[t].letter&&!e.marked));if(void 0!==s){let t=$(`.keyboard-key[data-key="${s.letter}"]`);e.eq(s.index).addClass("present-tile"),t.hasClass("correct-key")||t.addClass("present-key"),s.marked=!0}}let r=a.filter((e=>!e.marked));for(let t=0;t<r.length;t++){let s=$(`.keyboard-key[data-key="${r[t].letter}"]`);e.eq(r[t].index).addClass("incorrect-tile"),s.hasClass("correct-key")||s.hasClass("present-key")||s.addClass("incorrect-key")}let l={};$(".submitted-tile").last().closest(".group").find(".correct-tile").each((function(){l[$(this).data("index")]=$(this).data("letter")}));let i={};$(".submitted-tile").last().closest(".group").find(".present-tile").each((function(){i[$(this).data("index")]=$(this).data("letter")})),t===answer.word?(gameStatus=1,showToast(`You won after ${guesses_all.length} guesses!`),$("#player-dialog").addClass("show"),$(".bar").css("width",(Object.keys(i).length+2*Object.keys(l).length)/10*100+"%")):$(".empty-tile").length<30&&$(".empty-tile").length%15==0&&2===gameMode?(words=words.map((e=>({...e,score:getCommonCount(e,Object.values(l).join(""))}))).filter((e=>e.score>=Object.keys(l).length&&e!==answer.word)),answer=getWord(),answers.push(answer),guesses=[],showToast("The answer changed!"),$(".keyboard-key").removeClass("incorrect-key").removeClass("present-key"),$(".correct-key").removeClass("correct-key").addClass("present-key"),0===$(".empty-tile").length?($(".bar").css("width",(Object.keys(l).length>0?Object.keys(l).length/10*100:0)+"%"),initializeNewBoard()):$(".bar").css("width",(Object.keys(i).length+2*Object.keys(l).length)/10*100+"%")):1.5===gameMode&&0===$(".empty-tile").length?(initializeNewBoard(),$(".bar").css("width",(Object.keys(i).length+2*Object.keys(l).length)/10*100+"%")):$(".bar").css("width",(Object.keys(i).length+2*Object.keys(l).length)/10*100+"%")}function getWord(){let e=Math.floor(Math.random()*words.length);return words[e]}function getStringMap(e){const t=new Map;for(let s of e)t.has(s)?t.set(s,t.get(s)+1):t.set(s,1);return t}function getCommonCount(e,t){const s=e.stringMap,a=getStringMap(t);let o=0;for(let e of s.keys())a.has(e)&&(o+=Math.min(s.get(e),a.get(e)));return o}function showToast(e){$("#toast-msg").text(e).addClass("show"),setTimeout((function(){$("#toast-msg").removeClass("show")}),3e3)}$(document).ready((function(){$("#mode-menu").addClass("show"),setGameMode(2)})),$(document).on("click","#mode-menu .mode-btn",(function(){setGameMode($(this).data("mode")),$("#mode-menu").removeClass("show")})),$(document).on("click",".active-tile",(function(){$(this).hasClass("starter-tile")||($(".selected-tile").removeClass("selected-tile"),$(this).addClass("selected-tile"))})),$(document).on("click",".editable-tile",(function(){$(".selected-tile").removeClass("selected-tile"),$(this).addClass("selected-tile")})),$(document).on("click",".menu .close-btn",(function(){$(this).closest(".menu").removeClass("show")})),$(document).on("click","#mode-btn",(function(){$(".menu").removeClass("show"),$("#mode-menu").addClass("show")})),$(document).on("click","#reset-dialog .reset-cancel-btn",(function(){$("#reset-dialog").removeClass("show")})),$(document).on("click","#reset-dialog .reset-confirm-btn",(function(){$("#reset-dialog").removeClass("show"),initialize()})),$(document).on("click","#lose-dialog .giveup-cancel-btn",(function(){$("#lose-dialog").removeClass("show")})),$(document).on("click","#lose-dialog .giveup-confirm-btn",(function(){0===gameStatus&&(gameStatus=-1,$("#lose-dialog").removeClass("show"),endGame())})),$(document).on("click","#player-dialog .player-submit-btn",(async function(){let e=$("#player-input").val();""!==e&&($("#player-dialog").removeClass("show"),await readScoreboard(),scoreboard.Players.push({Player:{ID:scoreboard.Players.length.toString(),Name:e.toString()},ST_Stats:{Words:[1,1.5].includes(gameMode)?guesses_all.length:0},EG_Stats:{Word:answer.word.toUpperCase(),Guesses:2===gameMode?guesses_all.length:0}}),scoreboard.ST_Top10=scoreboard.Players.filter((e=>e.ST_Stats.Words>0)).sort(((e,t)=>e.ST_Stats.Words-t.ST_Stats.Words)).map((e=>({Player:e.Player,Words:e.ST_Stats.Words}))).slice(0,10),scoreboard.EG_Top10=scoreboard.Players.filter((e=>e.EG_Stats.Guesses>0)).sort(((e,t)=>e.EG_Stats.Guesses-t.EG_Stats.Guesses)).map((e=>({Player:e.Player,Word:e.EG_Stats.Word,Guesses:e.EG_Stats.Guesses}))).slice(0,10),populateScoreboard(),$("#scoreboard").addClass("show"),updateScoreboard()),endGame()})),$(document).on("click","#player-dialog .player-skip-btn",(function(){$("#player-dialog").removeClass("show"),endGame(1)})),$(document).on("click","#scoreboard-btn",(async function(){await readScoreboard(),$(".menu").removeClass("show"),$("#scoreboard").addClass("show")})),$(document).on("click",".fa-question-circle",(function(){$(".menu").removeClass("show"),$("#instructions-dialog").addClass("show")})),$(document).on("click",".keyboard-key",(function(){let e=$(this).data("key");switch(e){case"↵":$(".filled-tile").length>0&&$(".filled-tile").length%5==0&&0===gameStatus&&submitGuess($(".filled-tile").last().closest(".group").find(".tile"));break;case"←":if(0===gameStatus){($(".selected-tile").length>0?$(".selected-tile").first():$(".editable-tile").last()).data("letter","").text("").removeClass("editable-tile").removeClass("selected-tile").addClass("empty-tile")}break;case"reset":$(".menu").removeClass("show"),$("#reset-dialog").addClass("show");break;case"giveup":$(".menu").removeClass("show"),$("#lose-dialog").addClass("show");break;default:if((0===$(".editable-tile").length||$(".empty-tile").length%5!=0)&&0===gameStatus){($(".selected-tile").length>0?$(".selected-tile").first():$(".empty-tile").first()).data("letter",e).text(e).removeClass("empty-tile").removeClass("selected-tile").addClass("filled-tile").addClass("editable-tile")}}})),$(document).on("keyup",(function(e){let t=e.keyCode||e.which;if(8===t||13===t||t>=65&&t<=90)switch(t){case 13:$('.keyboard-key[data-key="↵"]').click();break;case 8:$('.keyboard-key[data-key="←"]').click();break;default:$(`.keyboard-key[data-key="${characters[t-65]}"]`).click()}}));